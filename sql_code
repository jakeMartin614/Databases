-- MySQL Script Cleaned and Fixed
-- Date: 2025-08-05

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- Create Schema
CREATE SCHEMA IF NOT EXISTS `Database_project_library` DEFAULT CHARACTER SET utf8;
USE `Database_project_library`;

-- Table: employees
CREATE TABLE IF NOT EXISTS employees (
  employee_id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(45),
  email VARCHAR(45),
  phone_number VARCHAR(45),
  street VARCHAR(45),
  city VARCHAR(45),
  state VARCHAR(45),
  zip VARCHAR(45),
  PRIMARY KEY (employee_id)
) ENGINE=InnoDB;

-- Table: books
CREATE TABLE IF NOT EXISTS books (
  book_id INT NOT NULL AUTO_INCREMENT,
  book_name VARCHAR(45),
  isbn VARCHAR(20),
  author VARCHAR(45),
  PRIMARY KEY (book_id)
) ENGINE=InnoDB;

-- Table: movies
CREATE TABLE IF NOT EXISTS movies (
  movie_id INT NOT NULL AUTO_INCREMENT,
  title VARCHAR(45),
  director VARCHAR(45),
  duration VARCHAR(45),
  release_date DATE,
  genre VARCHAR(45),
  PRIMARY KEY (movie_id)
) ENGINE=InnoDB;

-- Table: members
CREATE TABLE IF NOT EXISTS members (
  member_id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(45),
  email VARCHAR(45),
  phone_number VARCHAR(45),
  street VARCHAR(45),
  city VARCHAR(45),
  state VARCHAR(45),
  zip VARCHAR(45),
  PRIMARY KEY (member_id)
) ENGINE=InnoDB;

-- Table: library_cards
CREATE TABLE IF NOT EXISTS library_cards (
  library_card_id INT NOT NULL AUTO_INCREMENT,
  member_id INT,
  creation_date DATE,
  expiration_date DATE,
  fees DECIMAL(10,2),
  PRIMARY KEY (library_card_id),
  INDEX idx_member_id_lc (member_id),
  CONSTRAINT fk_member_id_lc
    FOREIGN KEY (member_id)
    REFERENCES members (member_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE=InnoDB;

-- Table: borrowed_movies
CREATE TABLE IF NOT EXISTS borrowed_movies (
  borrowed_movies_id INT NOT NULL AUTO_INCREMENT,
  movie_id INT,
  member_id INT,
  return_date DATE,
  due_date DATE,
  PRIMARY KEY (borrowed_movies_id),
  INDEX idx_movie_id_bm (movie_id),
  INDEX idx_member_id_bm (member_id),
  CONSTRAINT fk_movie_id_bm
    FOREIGN KEY (movie_id)
    REFERENCES movies (movie_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_member_id_bm
    FOREIGN KEY (member_id)
    REFERENCES members (member_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE=InnoDB;

-- Table: borrowed_books
CREATE TABLE IF NOT EXISTS borrowed_books (
  borrowed_book_id INT NOT NULL AUTO_INCREMENT,
  member_id INT,
  due_date DATE,
  return_date DATE,
  book_id INT,
  PRIMARY KEY (borrowed_book_id),
  INDEX idx_book_id_bb (book_id),
  INDEX idx_member_id_bb (member_id),
  CONSTRAINT fk_book_id_bb
    FOREIGN KEY (book_id)
    REFERENCES books (book_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_member_id_bb
    FOREIGN KEY (member_id)
    REFERENCES members (member_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE=InnoDB;

-- Table: check_outs
CREATE TABLE IF NOT EXISTS check_outs (
  check_outs_id INT NOT NULL AUTO_INCREMENT,
  employee_id INT,
  member_id INT,
  check_out_date DATE,
  PRIMARY KEY (check_outs_id),
  INDEX idx_employee_id_co (employee_id),
  INDEX idx_member_id_co (member_id),
  CONSTRAINT fk_employee_id_co
    FOREIGN KEY (employee_id)
    REFERENCES employees (employee_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_member_id_co
    FOREIGN KEY (member_id)
    REFERENCES members (member_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE=InnoDB;

-- Restore original settings
SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
